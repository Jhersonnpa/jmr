---
import Header from "../components/Header.astro";
import Aside from "../components/Aside.astro";
import Scripts from "../components/Scripts.jsx";
import ScriptsHead from "../components/ScriptsHead";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es" id="html">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="view-transition" content="same-origin" />
    <title>{title}</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css"
      rel="stylesheet"
    />
    <style>
      body::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        border-radius: 6x;
        /* background-color: #F5F5F5; */
      }

      body::-webkit-scrollbar {
        width: 8px;
        /* background-color: #F5F5F5; */
      }

      body::-webkit-scrollbar-thumb {
        border-radius: 6px;
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        background-color: #555;
      }
    </style>
    <script>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (
        localStorage.getItem("theme") === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
    <ScriptsHead client:load />
  </head>
  <body
    id="body"
    class="w-full h-full dark:bg-[radial-gradient(circle_500px_at_50%_200px,#3e3e3e,transparent)] bg-[radial-gradient(circle_500px_at_50%_500px,#D5C5FF,transparent)] bg-white dark:bg-[#13151a]"
  >
    <div>
      <Header />
      <main>
        <Aside />
        <slot />
      </main>
    </div>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js"
    ></script>
    <style>
      * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
      }
    </style>
  </body><Scripts client:load />
  <script>
    // Verifica si 'startViewTransition' está disponible en el documento
    // if ((document as any).startViewTransition) {
    //   // Agrega un event listener para el evento 'navigate'
    //   window.navigation.addEventListener('navigate', (event: any) => {
    //     const toUrl = new URL(event.destination.url);

    //     // Es una página externa? Si es así, lo ignoramos
    //     if (location.origin !== toUrl.origin) return;

    //     // Si es una navegación en el mismo dominio (origen)
    //     event.intercept({
    //       async handler() {
    //         try {
    //           // Cargamos la página de destino utilizando fetch para obtener el HTML
    //           const response = await fetch(toUrl.pathname);
    //           const text = await response.text();
    //           const regexHTML = /<html[^>]*>([\s\S]*?)<\/html>/i;

    //           // Extraemos solo el contenido del HTML dentro de la etiqueta body
    //           const [, data] = text.match(regexHTML) || [];

    //           if (data) {
    //             // Utilizamos la API de View Transition
    //             (document as any).startViewTransition(() => {
    //               const html = document.getElementById('html');

    //               if (html) {
    //                 // Hacemos scroll hacia arriba del todo
    //                 html.innerHTML = data;
    //                 // document.documentElement.scrollTop = 0;
    //               }
    //             });
    //           }
    //         } catch (error) {
    //           console.error('Error al cargar la página:', error);
    //         }
    //       },
    //     });
    //   });
    // }
  </script>
</html>
